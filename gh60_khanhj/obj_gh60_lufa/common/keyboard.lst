   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.keyboard_setup,"ax",@progbits
  12               	.global	keyboard_setup
  14               	keyboard_setup:
  15               	.LFB4:
  16               		.file 1 "../../tmk_core/common/keyboard.c"
   1:../../tmk_core/common/keyboard.c **** /*
   2:../../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.c **** 
   4:../../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.c **** 
   9:../../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.c **** 
  14:../../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.c **** */
  17:../../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../../tmk_core/common/keyboard.c **** #include "host.h"
  22:../../tmk_core/common/keyboard.c **** #include "led.h"
  23:../../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../../tmk_core/common/keyboard.c **** #include "print.h"
  26:../../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../../tmk_core/common/keyboard.c **** #include "command.h"
  28:../../tmk_core/common/keyboard.c **** #include "util.h"
  29:../../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../../tmk_core/common/keyboard.c **** #include "hook.h"
  34:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  35:../../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  36:../../tmk_core/common/keyboard.c **** #endif
  37:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  38:../../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  39:../../tmk_core/common/keyboard.c **** #endif
  40:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  41:../../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  42:../../tmk_core/common/keyboard.c **** #endif
  43:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  44:../../tmk_core/common/keyboard.c **** #include "adb.h"
  45:../../tmk_core/common/keyboard.c **** #endif
  46:../../tmk_core/common/keyboard.c **** 
  47:../../tmk_core/common/keyboard.c **** 
  48:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  49:../../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  50:../../tmk_core/common/keyboard.c **** {
  51:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  52:../../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  53:../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  54:../../tmk_core/common/keyboard.c ****         return false;
  55:../../tmk_core/common/keyboard.c **** 
  56:../../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  57:../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  58:../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  59:../../tmk_core/common/keyboard.c ****             return true;
  60:../../tmk_core/common/keyboard.c ****     }
  61:../../tmk_core/common/keyboard.c ****     return false;
  62:../../tmk_core/common/keyboard.c **** }
  63:../../tmk_core/common/keyboard.c **** #endif
  64:../../tmk_core/common/keyboard.c **** 
  65:../../tmk_core/common/keyboard.c **** 
  66:../../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  67:../../tmk_core/common/keyboard.c **** {
  17               		.loc 1 67 0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  68:../../tmk_core/common/keyboard.c ****     matrix_setup();
  23               		.loc 1 68 0
  24 0000 0C94 0000 		jmp matrix_setup
  25               	.LVL0:
  26               		.cfi_endproc
  27               	.LFE4:
  29               		.section	.text.keyboard_init,"ax",@progbits
  30               	.global	keyboard_init
  32               	keyboard_init:
  33               	.LFB5:
  69:../../tmk_core/common/keyboard.c **** }
  70:../../tmk_core/common/keyboard.c **** 
  71:../../tmk_core/common/keyboard.c **** void keyboard_init(void)
  72:../../tmk_core/common/keyboard.c **** {
  34               		.loc 1 72 0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
  73:../../tmk_core/common/keyboard.c ****     timer_init();
  40               		.loc 1 73 0
  41 0000 0E94 0000 		call timer_init
  42               	.LVL1:
  74:../../tmk_core/common/keyboard.c ****     matrix_init();
  43               		.loc 1 74 0
  44 0004 0E94 0000 		call matrix_init
  45               	.LVL2:
  75:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  76:../../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  77:../../tmk_core/common/keyboard.c **** #endif
  78:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  79:../../tmk_core/common/keyboard.c ****     serial_mouse_init();
  80:../../tmk_core/common/keyboard.c **** #endif
  81:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  82:../../tmk_core/common/keyboard.c ****     adb_mouse_init();
  83:../../tmk_core/common/keyboard.c **** #endif
  84:../../tmk_core/common/keyboard.c **** 
  85:../../tmk_core/common/keyboard.c **** 
  86:../../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  87:../../tmk_core/common/keyboard.c ****     bootmagic();
  46               		.loc 1 87 0
  47 0008 0C94 0000 		jmp bootmagic
  48               	.LVL3:
  49               		.cfi_endproc
  50               	.LFE5:
  52               		.section	.text.keyboard_task,"ax",@progbits
  53               	.global	keyboard_task
  55               	keyboard_task:
  56               	.LFB6:
  88:../../tmk_core/common/keyboard.c **** #endif
  89:../../tmk_core/common/keyboard.c **** 
  90:../../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  91:../../tmk_core/common/keyboard.c ****     backlight_init();
  92:../../tmk_core/common/keyboard.c **** #endif
  93:../../tmk_core/common/keyboard.c **** }
  94:../../tmk_core/common/keyboard.c **** 
  95:../../tmk_core/common/keyboard.c **** /*
  96:../../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
  97:../../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  98:../../tmk_core/common/keyboard.c ****  */
  99:../../tmk_core/common/keyboard.c **** void keyboard_task(void)
 100:../../tmk_core/common/keyboard.c **** {
  57               		.loc 1 100 0
  58               		.cfi_startproc
  59 0000 5F92      		push r5
  60               	.LCFI0:
  61               		.cfi_def_cfa_offset 3
  62               		.cfi_offset 5, -2
  63 0002 6F92      		push r6
  64               	.LCFI1:
  65               		.cfi_def_cfa_offset 4
  66               		.cfi_offset 6, -3
  67 0004 7F92      		push r7
  68               	.LCFI2:
  69               		.cfi_def_cfa_offset 5
  70               		.cfi_offset 7, -4
  71 0006 8F92      		push r8
  72               	.LCFI3:
  73               		.cfi_def_cfa_offset 6
  74               		.cfi_offset 8, -5
  75 0008 9F92      		push r9
  76               	.LCFI4:
  77               		.cfi_def_cfa_offset 7
  78               		.cfi_offset 9, -6
  79 000a AF92      		push r10
  80               	.LCFI5:
  81               		.cfi_def_cfa_offset 8
  82               		.cfi_offset 10, -7
  83 000c BF92      		push r11
  84               	.LCFI6:
  85               		.cfi_def_cfa_offset 9
  86               		.cfi_offset 11, -8
  87 000e CF92      		push r12
  88               	.LCFI7:
  89               		.cfi_def_cfa_offset 10
  90               		.cfi_offset 12, -9
  91 0010 DF92      		push r13
  92               	.LCFI8:
  93               		.cfi_def_cfa_offset 11
  94               		.cfi_offset 13, -10
  95 0012 EF92      		push r14
  96               	.LCFI9:
  97               		.cfi_def_cfa_offset 12
  98               		.cfi_offset 14, -11
  99 0014 FF92      		push r15
 100               	.LCFI10:
 101               		.cfi_def_cfa_offset 13
 102               		.cfi_offset 15, -12
 103 0016 0F93      		push r16
 104               	.LCFI11:
 105               		.cfi_def_cfa_offset 14
 106               		.cfi_offset 16, -13
 107 0018 1F93      		push r17
 108               	.LCFI12:
 109               		.cfi_def_cfa_offset 15
 110               		.cfi_offset 17, -14
 111 001a CF93      		push r28
 112               	.LCFI13:
 113               		.cfi_def_cfa_offset 16
 114               		.cfi_offset 28, -15
 115 001c DF93      		push r29
 116               	.LCFI14:
 117               		.cfi_def_cfa_offset 17
 118               		.cfi_offset 29, -16
 119 001e 00D0      		rcall .
 120 0020 00D0      		rcall .
 121 0022 1F92      		push __zero_reg__
 122               	.LCFI15:
 123               		.cfi_def_cfa_offset 22
 124 0024 CDB7      		in r28,__SP_L__
 125 0026 DEB7      		in r29,__SP_H__
 126               	.LCFI16:
 127               		.cfi_def_cfa_register 28
 128               	/* prologue: function */
 129               	/* frame size = 5 */
 130               	/* stack size = 20 */
 131               	.L__stack_usage = 20
 132               	.LVL4:
 101:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 102:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 103:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 104:../../tmk_core/common/keyboard.c **** #endif
 105:../../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 106:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 107:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 108:../../tmk_core/common/keyboard.c **** 
 109:../../tmk_core/common/keyboard.c ****     matrix_scan();
 133               		.loc 1 109 0
 134 0028 0E94 0000 		call matrix_scan
 135               	.LVL5:
 136 002c 90E0      		ldi r25,lo8(matrix_prev.2410)
 137 002e C92E      		mov r12,r25
 138 0030 90E0      		ldi r25,hi8(matrix_prev.2410)
 139 0032 D92E      		mov r13,r25
 140 0034 00E0      		ldi r16,0
 141 0036 10E0      		ldi r17,0
 142               	.LBB2:
 143               	.LBB3:
 110:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 111:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 112:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 113:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 114:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 115:../../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 116:../../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 117:../../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 118:../../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 119:../../tmk_core/common/keyboard.c ****                  */
 120:../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 121:../../tmk_core/common/keyboard.c ****                     matrix_print();
 122:../../tmk_core/common/keyboard.c ****                 }
 123:../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 124:../../tmk_core/common/keyboard.c ****                 continue;
 125:../../tmk_core/common/keyboard.c ****             }
 126:../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 127:../../tmk_core/common/keyboard.c **** #endif
 128:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 129:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 144               		.loc 1 130 0
 145 0038 AA24      		clr r10
 146 003a A394      		inc r10
 147 003c B12C      		mov r11,__zero_reg__
 148               	.LVL6:
 149               	.L13:
 150 003e 502E      		mov r5,r16
 151               	.LVL7:
 152               	.LBE3:
 111:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 153               		.loc 1 111 0
 154 0040 802F      		mov r24,r16
 155 0042 0E94 0000 		call matrix_get_row
 156               	.LVL8:
 157 0046 3C01      		movw r6,r24
 158               	.LVL9:
 112:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 159               		.loc 1 112 0
 160 0048 F601      		movw r30,r12
 161 004a E190      		ld r14,Z+
 162 004c F190      		ld r15,Z+
 163 004e 6F01      		movw r12,r30
 164 0050 E826      		eor r14,r24
 165 0052 F926      		eor r15,r25
 166               	.LVL10:
 113:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 167               		.loc 1 113 0
 168 0054 E114      		cp r14,__zero_reg__
 169 0056 F104      		cpc r15,__zero_reg__
 170 0058 01F4      		brne .L4
 171               	.L11:
 172               	.LVL11:
 173 005a 0F5F      		subi r16,-1
 174 005c 1F4F      		sbci r17,-1
 175               	.LVL12:
 110:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 176               		.loc 1 110 0
 177 005e 0630      		cpi r16,6
 178 0060 1105      		cpc r17,__zero_reg__
 179 0062 01F4      		brne .L13
 180               	.LBE2:
 131:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 132:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 133:../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 134:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 135:../../tmk_core/common/keyboard.c ****                     };
 136:../../tmk_core/common/keyboard.c ****                     action_exec(e);
 137:../../tmk_core/common/keyboard.c ****                     hook_matrix_change(e);
 138:../../tmk_core/common/keyboard.c ****                     // record a processed key
 139:../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 140:../../tmk_core/common/keyboard.c ****                     // process a key per task call
 141:../../tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 142:../../tmk_core/common/keyboard.c ****                 }
 143:../../tmk_core/common/keyboard.c ****             }
 144:../../tmk_core/common/keyboard.c ****         }
 145:../../tmk_core/common/keyboard.c ****     }
 146:../../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 147:../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 181               		.loc 1 147 0
 182 0064 8FEF      		ldi r24,lo8(-1)
 183 0066 8983      		std Y+1,r24
 184 0068 8A83      		std Y+2,r24
 185 006a 1B82      		std Y+3,__zero_reg__
 186 006c 0E94 0000 		call timer_read
 187               	.LVL13:
 188 0070 8160      		ori r24,1
 189 0072 782F      		mov r23,r24
 190 0074 9D83      		std Y+5,r25
 191 0076 8C83      		std Y+4,r24
 192 0078 4981      		ldd r20,Y+1
 193 007a 5A81      		ldd r21,Y+2
 194 007c 6B81      		ldd r22,Y+3
 195 007e 8D81      		ldd r24,Y+5
 196 0080 0E94 0000 		call action_exec
 197               	.LVL14:
 198 0084 00C0      		rjmp .L10
 199               	.L4:
 200               	.LBB6:
 128:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 201               		.loc 1 128 0
 202 0086 8091 0000 		lds r24,debug_config
 203 008a 81FD      		sbrc r24,1
 128:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 204               		.loc 1 128 0 is_stmt 0 discriminator 1
 205 008c 0E94 0000 		call matrix_print
 206               	.LVL15:
 207               	.L7:
 208               	.LBE6:
 109:../../tmk_core/common/keyboard.c ****     matrix_scan();
 209               		.loc 1 109 0 is_stmt 1
 210 0090 20E0      		ldi r18,0
 211 0092 30E0      		ldi r19,0
 212               	.LVL16:
 213               	.L12:
 214               	.LBB7:
 215               	.LBB5:
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 216               		.loc 1 130 0
 217 0094 4501      		movw r8,r10
 218 0096 022E      		mov r0,r18
 219 0098 00C0      		rjmp 2f
 220               		1:
 221 009a 880C      		lsl r8
 222 009c 991C      		rol r9
 223               		2:
 224 009e 0A94      		dec r0
 225 00a0 02F4      		brpl 1b
 226 00a2 C401      		movw r24,r8
 227 00a4 8E21      		and r24,r14
 228 00a6 9F21      		and r25,r15
 229 00a8 892B      		or r24,r25
 230 00aa 01F0      		breq .L8
 231               	.LBB4:
 131:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 232               		.loc 1 131 0
 233 00ac 2983      		std Y+1,r18
 234 00ae 5A82      		std Y+2,r5
 133:../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 235               		.loc 1 133 0
 236 00b0 6820      		and r6,r8
 237 00b2 7920      		and r7,r9
 238               	.LVL17:
 239 00b4 81E0      		ldi r24,lo8(1)
 240 00b6 6728      		or r6,r7
 241 00b8 01F4      		brne .L9
 242 00ba 80E0      		ldi r24,0
 243               	.L9:
 131:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 244               		.loc 1 131 0
 245 00bc 8B83      		std Y+3,r24
 134:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 246               		.loc 1 134 0
 247 00be 0E94 0000 		call timer_read
 248               	.LVL18:
 249 00c2 8160      		ori r24,1
 131:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 250               		.loc 1 131 0
 251 00c4 782F      		mov r23,r24
 252 00c6 9D83      		std Y+5,r25
 253 00c8 8C83      		std Y+4,r24
 136:../../tmk_core/common/keyboard.c ****                     action_exec(e);
 254               		.loc 1 136 0
 255 00ca 4981      		ldd r20,Y+1
 256 00cc 5A81      		ldd r21,Y+2
 257 00ce 6B81      		ldd r22,Y+3
 258 00d0 8D81      		ldd r24,Y+5
 259 00d2 0E94 0000 		call action_exec
 260               	.LVL19:
 137:../../tmk_core/common/keyboard.c ****                     hook_matrix_change(e);
 261               		.loc 1 137 0
 262 00d6 4981      		ldd r20,Y+1
 263 00d8 5A81      		ldd r21,Y+2
 264 00da 6B81      		ldd r22,Y+3
 265 00dc 7C81      		ldd r23,Y+4
 266 00de 8D81      		ldd r24,Y+5
 267 00e0 0E94 0000 		call hook_matrix_change
 268               	.LVL20:
 139:../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 269               		.loc 1 139 0
 270 00e4 F801      		movw r30,r16
 271 00e6 EE0F      		lsl r30
 272 00e8 FF1F      		rol r31
 273 00ea E050      		subi r30,lo8(-(matrix_prev.2410))
 274 00ec F040      		sbci r31,hi8(-(matrix_prev.2410))
 275 00ee 8081      		ld r24,Z
 276 00f0 9181      		ldd r25,Z+1
 277 00f2 8825      		eor r24,r8
 278 00f4 9925      		eor r25,r9
 279 00f6 9183      		std Z+1,r25
 280 00f8 8083      		st Z,r24
 281 00fa 00C0      		rjmp .L10
 282               	.LVL21:
 283               	.L8:
 284 00fc 2F5F      		subi r18,-1
 285 00fe 3F4F      		sbci r19,-1
 286               	.LVL22:
 287               	.LBE4:
 129:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 288               		.loc 1 129 0
 289 0100 2E30      		cpi r18,14
 290 0102 3105      		cpc r19,__zero_reg__
 291 0104 01F4      		brne .L12
 292 0106 00C0      		rjmp .L11
 293               	.LVL23:
 294               	.L10:
 295               	.LBE5:
 296               	.LBE7:
 148:../../tmk_core/common/keyboard.c **** 
 149:../../tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 150:../../tmk_core/common/keyboard.c **** 
 151:../../tmk_core/common/keyboard.c ****     hook_keyboard_loop();
 297               		.loc 1 151 0
 298 0108 0E94 0000 		call hook_keyboard_loop
 299               	.LVL24:
 152:../../tmk_core/common/keyboard.c **** 
 153:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 154:../../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 155:../../tmk_core/common/keyboard.c ****     mousekey_task();
 300               		.loc 1 155 0
 301 010c 0E94 0000 		call mousekey_task
 302               	.LVL25:
 156:../../tmk_core/common/keyboard.c **** #endif
 157:../../tmk_core/common/keyboard.c **** 
 158:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 159:../../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 160:../../tmk_core/common/keyboard.c **** #endif
 161:../../tmk_core/common/keyboard.c **** 
 162:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 163:../../tmk_core/common/keyboard.c ****         serial_mouse_task();
 164:../../tmk_core/common/keyboard.c **** #endif
 165:../../tmk_core/common/keyboard.c **** 
 166:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 167:../../tmk_core/common/keyboard.c ****         adb_mouse_task();
 168:../../tmk_core/common/keyboard.c **** #endif
 169:../../tmk_core/common/keyboard.c **** 
 170:../../tmk_core/common/keyboard.c ****     // update LED
 171:../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 303               		.loc 1 171 0
 304 0110 1091 0000 		lds r17,led_status.2411
 305 0114 0E94 0000 		call host_keyboard_leds
 306               	.LVL26:
 307 0118 1817      		cp r17,r24
 308 011a 01F0      		breq .L3
 172:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 309               		.loc 1 172 0
 310 011c 0E94 0000 		call host_keyboard_leds
 311               	.LVL27:
 312 0120 8093 0000 		sts led_status.2411,r24
 173:../../tmk_core/common/keyboard.c ****         if (debug_keyboard) dprintf("LED: %02X\n", led_status);
 313               		.loc 1 173 0
 314 0124 9091 0000 		lds r25,debug_config
 315 0128 92FF      		sbrs r25,2
 316 012a 00C0      		rjmp .L15
 317               		.loc 1 173 0 is_stmt 0 discriminator 1
 318 012c 90FF      		sbrs r25,0
 319 012e 00C0      		rjmp .L15
 320 0130 1F92      		push __zero_reg__
 321 0132 8F93      		push r24
 322 0134 80E0      		ldi r24,lo8(__c.2428)
 323 0136 90E0      		ldi r25,hi8(__c.2428)
 324 0138 9F93      		push r25
 325 013a 8F93      		push r24
 326 013c 0E94 0000 		call __xprintf
 327               	.LVL28:
 328 0140 0F90      		pop __tmp_reg__
 329 0142 0F90      		pop __tmp_reg__
 330 0144 0F90      		pop __tmp_reg__
 331 0146 0F90      		pop __tmp_reg__
 332               	.L15:
 174:../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 333               		.loc 1 174 0 is_stmt 1
 334 0148 8091 0000 		lds r24,led_status.2411
 335               	/* epilogue start */
 175:../../tmk_core/common/keyboard.c ****     }
 176:../../tmk_core/common/keyboard.c **** }
 336               		.loc 1 176 0
 337 014c 0F90      		pop __tmp_reg__
 338 014e 0F90      		pop __tmp_reg__
 339 0150 0F90      		pop __tmp_reg__
 340 0152 0F90      		pop __tmp_reg__
 341 0154 0F90      		pop __tmp_reg__
 342 0156 DF91      		pop r29
 343 0158 CF91      		pop r28
 344 015a 1F91      		pop r17
 345 015c 0F91      		pop r16
 346 015e FF90      		pop r15
 347 0160 EF90      		pop r14
 348               	.LVL29:
 349 0162 DF90      		pop r13
 350 0164 CF90      		pop r12
 351 0166 BF90      		pop r11
 352 0168 AF90      		pop r10
 353 016a 9F90      		pop r9
 354 016c 8F90      		pop r8
 355 016e 7F90      		pop r7
 356 0170 6F90      		pop r6
 357 0172 5F90      		pop r5
 174:../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 358               		.loc 1 174 0
 359 0174 0C94 0000 		jmp hook_keyboard_leds_change
 360               	.LVL30:
 361               	.L3:
 362               	/* epilogue start */
 363               		.loc 1 176 0
 364 0178 0F90      		pop __tmp_reg__
 365 017a 0F90      		pop __tmp_reg__
 366 017c 0F90      		pop __tmp_reg__
 367 017e 0F90      		pop __tmp_reg__
 368 0180 0F90      		pop __tmp_reg__
 369 0182 DF91      		pop r29
 370 0184 CF91      		pop r28
 371 0186 1F91      		pop r17
 372 0188 0F91      		pop r16
 373 018a FF90      		pop r15
 374 018c EF90      		pop r14
 375               	.LVL31:
 376 018e DF90      		pop r13
 377 0190 CF90      		pop r12
 378 0192 BF90      		pop r11
 379 0194 AF90      		pop r10
 380 0196 9F90      		pop r9
 381 0198 8F90      		pop r8
 382 019a 7F90      		pop r7
 383 019c 6F90      		pop r6
 384 019e 5F90      		pop r5
 385 01a0 0895      		ret
 386               		.cfi_endproc
 387               	.LFE6:
 389               		.section	.text.keyboard_set_leds,"ax",@progbits
 390               	.global	keyboard_set_leds
 392               	keyboard_set_leds:
 393               	.LFB7:
 177:../../tmk_core/common/keyboard.c **** 
 178:../../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 179:../../tmk_core/common/keyboard.c **** {
 394               		.loc 1 179 0
 395               		.cfi_startproc
 396               	.LVL32:
 397               	/* prologue: function */
 398               	/* frame size = 0 */
 399               	/* stack size = 0 */
 400               	.L__stack_usage = 0
 180:../../tmk_core/common/keyboard.c ****     led_set(leds);
 401               		.loc 1 180 0
 402 0000 0C94 0000 		jmp led_set
 403               	.LVL33:
 404               		.cfi_endproc
 405               	.LFE7:
 407               		.section	.progmem.data.__c.2428,"a",@progbits
 410               	__c.2428:
 411 0000 4C45 443A 		.string	"LED: %02X\n"
 411      2025 3032 
 411      580A 00
 412               		.section	.bss.led_status.2411,"aw",@nobits
 415               	led_status.2411:
 416 0000 00        		.zero	1
 417               		.section	.bss.matrix_prev.2410,"aw",@nobits
 420               	matrix_prev.2410:
 421 0000 0000 0000 		.zero	12
 421      0000 0000 
 421      0000 0000 
 422               		.text
 423               	.Letext0:
 424               		.file 2 "/usr/lib/avr/include/stdint.h"
 425               		.file 3 "../../tmk_core/common/keyboard.h"
 426               		.file 4 "../../tmk_core/common/matrix.h"
 427               		.file 5 "../../tmk_core/common/debug.h"
 428               		.file 6 "../../tmk_core/common/timer.h"
 429               		.file 7 "../../tmk_core/common/bootmagic.h"
 430               		.file 8 "../../tmk_core/common/action.h"
 431               		.file 9 "../../tmk_core/common/hook.h"
 432               		.file 10 "../../tmk_core/common/mousekey.h"
 433               		.file 11 "../../tmk_core/common/host.h"
 434               		.file 12 "../../tmk_core/common/avr/xprintf.h"
 435               		.file 13 "../../tmk_core/common/led.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/ccJ4b2H8.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccJ4b2H8.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccJ4b2H8.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccJ4b2H8.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccJ4b2H8.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccJ4b2H8.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccJ4b2H8.s:14     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/ccJ4b2H8.s:32     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/ccJ4b2H8.s:55     .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/ccJ4b2H8.s:420    .bss.matrix_prev.2410:0000000000000000 matrix_prev.2410
     /tmp/ccJ4b2H8.s:415    .bss.led_status.2411:0000000000000000 led_status.2411
     /tmp/ccJ4b2H8.s:410    .progmem.data.__c.2428:0000000000000000 __c.2428
     /tmp/ccJ4b2H8.s:392    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
matrix_setup
timer_init
matrix_init
bootmagic
matrix_scan
matrix_get_row
timer_read
action_exec
debug_config
matrix_print
hook_matrix_change
hook_keyboard_loop
mousekey_task
host_keyboard_leds
__xprintf
hook_keyboard_leds_change
led_set
__do_clear_bss
