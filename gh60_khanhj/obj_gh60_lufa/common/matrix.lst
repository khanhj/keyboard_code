   1               		.file	"matrix.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.matrix_rows,"ax",@progbits
  12               		.weak	matrix_rows
  14               	matrix_rows:
  15               	.LFB1:
  16               		.file 1 "../../tmk_core/common/matrix.c"
   1:../../tmk_core/common/matrix.c **** /*
   2:../../tmk_core/common/matrix.c **** Copyright 2016 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/matrix.c **** 
   4:../../tmk_core/common/matrix.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/matrix.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/matrix.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/matrix.c **** (at your option) any later version.
   8:../../tmk_core/common/matrix.c **** 
   9:../../tmk_core/common/matrix.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/matrix.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/matrix.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/matrix.c **** GNU General Public License for more details.
  13:../../tmk_core/common/matrix.c **** 
  14:../../tmk_core/common/matrix.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/matrix.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/matrix.c **** */
  17:../../tmk_core/common/matrix.c **** #include "print.h"
  18:../../tmk_core/common/matrix.c **** #include "matrix.h"
  19:../../tmk_core/common/matrix.c **** 
  20:../../tmk_core/common/matrix.c **** 
  21:../../tmk_core/common/matrix.c **** __attribute__ ((weak))
  22:../../tmk_core/common/matrix.c **** uint8_t matrix_rows(void)
  23:../../tmk_core/common/matrix.c **** {
  17               		.loc 1 23 0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  24:../../tmk_core/common/matrix.c ****     return MATRIX_ROWS;
  25:../../tmk_core/common/matrix.c **** }
  23               		.loc 1 25 0
  24 0000 86E0      		ldi r24,lo8(6)
  25 0002 0895      		ret
  26               		.cfi_endproc
  27               	.LFE1:
  29               		.section	.text.matrix_cols,"ax",@progbits
  30               		.weak	matrix_cols
  32               	matrix_cols:
  33               	.LFB2:
  26:../../tmk_core/common/matrix.c **** 
  27:../../tmk_core/common/matrix.c **** __attribute__ ((weak))
  28:../../tmk_core/common/matrix.c **** uint8_t matrix_cols(void)
  29:../../tmk_core/common/matrix.c **** {
  34               		.loc 1 29 0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
  30:../../tmk_core/common/matrix.c ****     return MATRIX_COLS;
  31:../../tmk_core/common/matrix.c **** }
  40               		.loc 1 31 0
  41 0000 8EE0      		ldi r24,lo8(14)
  42 0002 0895      		ret
  43               		.cfi_endproc
  44               	.LFE2:
  46               		.section	.text.matrix_clear,"ax",@progbits
  47               		.weak	matrix_clear
  49               	matrix_clear:
  50               	.LFB3:
  32:../../tmk_core/common/matrix.c **** 
  33:../../tmk_core/common/matrix.c **** __attribute__ ((weak))
  34:../../tmk_core/common/matrix.c **** void matrix_clear(void)
  35:../../tmk_core/common/matrix.c **** {
  51               		.loc 1 35 0
  52               		.cfi_startproc
  53               	/* prologue: function */
  54               	/* frame size = 0 */
  55               	/* stack size = 0 */
  56               	.L__stack_usage = 0
  57 0000 0895      		ret
  58               		.cfi_endproc
  59               	.LFE3:
  61               		.section	.text.matrix_setup,"ax",@progbits
  62               		.weak	matrix_setup
  64               	matrix_setup:
  65               	.LFB4:
  36:../../tmk_core/common/matrix.c **** }
  37:../../tmk_core/common/matrix.c **** 
  38:../../tmk_core/common/matrix.c **** __attribute__ ((weak))
  39:../../tmk_core/common/matrix.c **** void matrix_setup(void) {}
  66               		.loc 1 39 0
  67               		.cfi_startproc
  68               	/* prologue: function */
  69               	/* frame size = 0 */
  70               	/* stack size = 0 */
  71               	.L__stack_usage = 0
  72 0000 0895      		ret
  73               		.cfi_endproc
  74               	.LFE4:
  76               		.section	.text.matrix_is_on,"ax",@progbits
  77               		.weak	matrix_is_on
  79               	matrix_is_on:
  80               	.LFB5:
  40:../../tmk_core/common/matrix.c **** 
  41:../../tmk_core/common/matrix.c **** __attribute__ ((weak))
  42:../../tmk_core/common/matrix.c **** bool matrix_is_on(uint8_t row, uint8_t col)
  43:../../tmk_core/common/matrix.c **** {
  81               		.loc 1 43 0
  82               		.cfi_startproc
  83               	.LVL0:
  84               		.loc 1 43 0
  85 0000 CF93      		push r28
  86               	.LCFI0:
  87               		.cfi_def_cfa_offset 3
  88               		.cfi_offset 28, -2
  89 0002 DF93      		push r29
  90               	.LCFI1:
  91               		.cfi_def_cfa_offset 4
  92               		.cfi_offset 29, -3
  93 0004 1F92      		push __zero_reg__
  94               	.LCFI2:
  95               		.cfi_def_cfa_offset 5
  96 0006 CDB7      		in r28,__SP_L__
  97 0008 DEB7      		in r29,__SP_H__
  98               	.LCFI3:
  99               		.cfi_def_cfa_register 28
 100               	/* prologue: function */
 101               	/* frame size = 1 */
 102               	/* stack size = 3 */
 103               	.L__stack_usage = 3
  44:../../tmk_core/common/matrix.c ****     return (matrix_get_row(row) & (1<<col));
 104               		.loc 1 44 0
 105 000a 6983      		std Y+1,r22
 106 000c 0E94 0000 		call matrix_get_row
 107               	.LVL1:
 108 0010 21E0      		ldi r18,lo8(1)
 109 0012 30E0      		ldi r19,0
 110 0014 6981      		ldd r22,Y+1
 111 0016 00C0      		rjmp 2f
 112               		1:
 113 0018 220F      		lsl r18
 114 001a 331F      		rol r19
 115               		2:
 116 001c 6A95      		dec r22
 117 001e 02F4      		brpl 1b
 118 0020 2823      		and r18,r24
 119 0022 3923      		and r19,r25
 120 0024 81E0      		ldi r24,lo8(1)
 121 0026 232B      		or r18,r19
 122 0028 01F4      		brne .L6
 123 002a 80E0      		ldi r24,0
 124               	.L6:
 125               	/* epilogue start */
  45:../../tmk_core/common/matrix.c **** }
 126               		.loc 1 45 0
 127 002c 0F90      		pop __tmp_reg__
 128 002e DF91      		pop r29
 129 0030 CF91      		pop r28
 130 0032 0895      		ret
 131               		.cfi_endproc
 132               	.LFE5:
 134               		.section	.rodata.str1.1,"aMS",@progbits,1
 135               	.LC0:
 136 0000 00        		.string	""
 137               		.section	.text.matrix_print,"ax",@progbits
 138               		.weak	matrix_print
 140               	matrix_print:
 141               	.LFB6:
  46:../../tmk_core/common/matrix.c **** 
  47:../../tmk_core/common/matrix.c **** __attribute__ ((weak))
  48:../../tmk_core/common/matrix.c **** void matrix_print(void)
  49:../../tmk_core/common/matrix.c **** {
 142               		.loc 1 49 0
 143               		.cfi_startproc
 144 0000 EF92      		push r14
 145               	.LCFI4:
 146               		.cfi_def_cfa_offset 3
 147               		.cfi_offset 14, -2
 148 0002 FF92      		push r15
 149               	.LCFI5:
 150               		.cfi_def_cfa_offset 4
 151               		.cfi_offset 15, -3
 152 0004 0F93      		push r16
 153               	.LCFI6:
 154               		.cfi_def_cfa_offset 5
 155               		.cfi_offset 16, -4
 156 0006 1F93      		push r17
 157               	.LCFI7:
 158               		.cfi_def_cfa_offset 6
 159               		.cfi_offset 17, -5
 160 0008 CF93      		push r28
 161               	.LCFI8:
 162               		.cfi_def_cfa_offset 7
 163               		.cfi_offset 28, -6
 164 000a DF93      		push r29
 165               	.LCFI9:
 166               		.cfi_def_cfa_offset 8
 167               		.cfi_offset 29, -7
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 6 */
 171               	.L__stack_usage = 6
  50:../../tmk_core/common/matrix.c **** #if (MATRIX_COLS <= 8)
  51:../../tmk_core/common/matrix.c ****     print("r/c 01234567\n");
  52:../../tmk_core/common/matrix.c **** #elif (MATRIX_COLS <= 16)
  53:../../tmk_core/common/matrix.c ****     print("r/c 0123456789ABCDEF\n");
 172               		.loc 1 53 0
 173 000c 80E0      		ldi r24,lo8(__c.1742)
 174 000e 90E0      		ldi r25,hi8(__c.1742)
 175 0010 0E94 0000 		call xputs
 176 0014 C0E0      		ldi r28,0
 177 0016 D0E0      		ldi r29,0
 178               	.LBB2:
  54:../../tmk_core/common/matrix.c **** #elif (MATRIX_COLS <= 32)
  55:../../tmk_core/common/matrix.c ****     print("r/c 0123456789ABCDEF0123456789ABCDEF\n");
  56:../../tmk_core/common/matrix.c **** #endif
  57:../../tmk_core/common/matrix.c **** 
  58:../../tmk_core/common/matrix.c ****     for (uint8_t row = 0; row < MATRIX_ROWS; row++) {
  59:../../tmk_core/common/matrix.c **** 
  60:../../tmk_core/common/matrix.c **** #if (MATRIX_COLS <= 8)
  61:../../tmk_core/common/matrix.c ****         xprintf("%02X: %08b%s\n", row, bitrev(matrix_get_row(row)),
  62:../../tmk_core/common/matrix.c **** #elif (MATRIX_COLS <= 16)
  63:../../tmk_core/common/matrix.c ****         xprintf("%02X: %016b%s\n", row, bitrev16(matrix_get_row(row)),
 179               		.loc 1 63 0
 180 0018 80E0      		ldi r24,lo8(.LC0)
 181 001a E82E      		mov r14,r24
 182 001c 80E0      		ldi r24,hi8(.LC0)
 183 001e F82E      		mov r15,r24
 184 0020 00E0      		ldi r16,lo8(__c.1745)
 185 0022 10E0      		ldi r17,hi8(__c.1745)
 186               	.L10:
 187               		.loc 1 63 0 is_stmt 0 discriminator 2
 188 0024 8C2F      		mov r24,r28
 189 0026 0E94 0000 		call matrix_get_row
 190 002a 0E94 0000 		call bitrev16
 191 002e FF92      		push r15
 192               	.LCFI10:
 193               		.cfi_def_cfa_offset 9
 194 0030 EF92      		push r14
 195               	.LCFI11:
 196               		.cfi_def_cfa_offset 10
 197 0032 9F93      		push r25
 198               	.LCFI12:
 199               		.cfi_def_cfa_offset 11
 200 0034 8F93      		push r24
 201               	.LCFI13:
 202               		.cfi_def_cfa_offset 12
 203 0036 DF93      		push r29
 204               	.LCFI14:
 205               		.cfi_def_cfa_offset 13
 206 0038 CF93      		push r28
 207               	.LCFI15:
 208               		.cfi_def_cfa_offset 14
 209 003a 1F93      		push r17
 210               	.LCFI16:
 211               		.cfi_def_cfa_offset 15
 212 003c 0F93      		push r16
 213               	.LCFI17:
 214               		.cfi_def_cfa_offset 16
 215 003e 0E94 0000 		call __xprintf
 216 0042 2196      		adiw r28,1
  58:../../tmk_core/common/matrix.c ****     for (uint8_t row = 0; row < MATRIX_ROWS; row++) {
 217               		.loc 1 58 0 is_stmt 1 discriminator 2
 218 0044 8DB7      		in r24,__SP_L__
 219 0046 9EB7      		in r25,__SP_H__
 220 0048 0896      		adiw r24,8
 221 004a 0FB6      		in __tmp_reg__,__SREG__
 222 004c F894      		cli
 223 004e 9EBF      		out __SP_H__,r25
 224 0050 0FBE      		out __SREG__,__tmp_reg__
 225 0052 8DBF      		out __SP_L__,r24
 226               	.LCFI18:
 227               		.cfi_def_cfa_offset 8
 228 0054 C630      		cpi r28,6
 229 0056 D105      		cpc r29,__zero_reg__
 230 0058 01F4      		brne .L10
 231               	/* epilogue start */
 232               	.LBE2:
  64:../../tmk_core/common/matrix.c **** #elif (MATRIX_COLS <= 32)
  65:../../tmk_core/common/matrix.c ****         xprintf("%02X: %032b%s\n", row, bitrev32(matrix_get_row(row)),
  66:../../tmk_core/common/matrix.c **** #endif
  67:../../tmk_core/common/matrix.c **** #ifdef MATRIX_HAS_GHOST
  68:../../tmk_core/common/matrix.c ****         matrix_has_ghost_in_row(row) ?  " <ghost" : ""
  69:../../tmk_core/common/matrix.c **** #else
  70:../../tmk_core/common/matrix.c ****         ""
  71:../../tmk_core/common/matrix.c **** #endif
  72:../../tmk_core/common/matrix.c ****         );
  73:../../tmk_core/common/matrix.c ****     }
  74:../../tmk_core/common/matrix.c **** }
 233               		.loc 1 74 0
 234 005a DF91      		pop r29
 235 005c CF91      		pop r28
 236 005e 1F91      		pop r17
 237 0060 0F91      		pop r16
 238 0062 FF90      		pop r15
 239 0064 EF90      		pop r14
 240 0066 0895      		ret
 241               		.cfi_endproc
 242               	.LFE6:
 244               		.section	.text.matrix_power_up,"ax",@progbits
 245               		.weak	matrix_power_up
 247               	matrix_power_up:
 248               	.LFB7:
  75:../../tmk_core/common/matrix.c **** 
  76:../../tmk_core/common/matrix.c **** #ifdef MATRIX_HAS_GHOST
  77:../../tmk_core/common/matrix.c **** __attribute__ ((weak))
  78:../../tmk_core/common/matrix.c **** bool matrix_has_ghost_in_row(uint8_t row)
  79:../../tmk_core/common/matrix.c **** {
  80:../../tmk_core/common/matrix.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  81:../../tmk_core/common/matrix.c ****     // No ghost exists when less than 2 keys are down on the row
  82:../../tmk_core/common/matrix.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  83:../../tmk_core/common/matrix.c ****         return false;
  84:../../tmk_core/common/matrix.c **** 
  85:../../tmk_core/common/matrix.c ****     // Ghost occurs when the row shares column line with other row
  86:../../tmk_core/common/matrix.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  87:../../tmk_core/common/matrix.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  88:../../tmk_core/common/matrix.c ****             return true;
  89:../../tmk_core/common/matrix.c ****     }
  90:../../tmk_core/common/matrix.c ****     return false;
  91:../../tmk_core/common/matrix.c **** }
  92:../../tmk_core/common/matrix.c **** #endif
  93:../../tmk_core/common/matrix.c **** 
  94:../../tmk_core/common/matrix.c **** __attribute__ ((weak)) void matrix_power_up(void) {}
 249               		.loc 1 94 0
 250               		.cfi_startproc
 251               	/* prologue: function */
 252               	/* frame size = 0 */
 253               	/* stack size = 0 */
 254               	.L__stack_usage = 0
 255 0000 0895      		ret
 256               		.cfi_endproc
 257               	.LFE7:
 259               		.section	.text.matrix_power_down,"ax",@progbits
 260               		.weak	matrix_power_down
 262               	matrix_power_down:
 263               	.LFB8:
  95:../../tmk_core/common/matrix.c **** __attribute__ ((weak)) void matrix_power_down(void) {}
 264               		.loc 1 95 0
 265               		.cfi_startproc
 266               	/* prologue: function */
 267               	/* frame size = 0 */
 268               	/* stack size = 0 */
 269               	.L__stack_usage = 0
 270 0000 0895      		ret
 271               		.cfi_endproc
 272               	.LFE8:
 274               		.section	.progmem.data.__c.1745,"a",@progbits
 277               	__c.1745:
 278 0000 2530 3258 		.string	"%02X: %016b%s\n"
 278      3A20 2530 
 278      3136 6225 
 278      730A 00
 279               		.section	.progmem.data.__c.1742,"a",@progbits
 282               	__c.1742:
 283 0000 722F 6320 		.string	"r/c 0123456789ABCDEF\n"
 283      3031 3233 
 283      3435 3637 
 283      3839 4142 
 283      4344 4546 
 284               		.text
 285               	.Letext0:
 286               		.file 2 "/usr/lib/avr/include/stdint.h"
 287               		.file 3 "../../tmk_core/common/matrix.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 matrix.c
     /tmp/cc3j6YCb.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc3j6YCb.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc3j6YCb.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc3j6YCb.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cc3j6YCb.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc3j6YCb.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc3j6YCb.s:14     .text.matrix_rows:0000000000000000 matrix_rows
     /tmp/cc3j6YCb.s:32     .text.matrix_cols:0000000000000000 matrix_cols
     /tmp/cc3j6YCb.s:49     .text.matrix_clear:0000000000000000 matrix_clear
     /tmp/cc3j6YCb.s:64     .text.matrix_setup:0000000000000000 matrix_setup
     /tmp/cc3j6YCb.s:79     .text.matrix_is_on:0000000000000000 matrix_is_on
     /tmp/cc3j6YCb.s:140    .text.matrix_print:0000000000000000 matrix_print
     /tmp/cc3j6YCb.s:282    .progmem.data.__c.1742:0000000000000000 __c.1742
     /tmp/cc3j6YCb.s:277    .progmem.data.__c.1745:0000000000000000 __c.1745
     /tmp/cc3j6YCb.s:247    .text.matrix_power_up:0000000000000000 matrix_power_up
     /tmp/cc3j6YCb.s:262    .text.matrix_power_down:0000000000000000 matrix_power_down

UNDEFINED SYMBOLS
matrix_get_row
xputs
bitrev16
__xprintf
__do_copy_data
