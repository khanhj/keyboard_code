   1               		.file	"suspend.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.suspend_idle,"ax",@progbits
  12               	.global	suspend_idle
  14               	suspend_idle:
  15               	.LFB107:
  16               		.file 1 "../../tmk_core/common/avr/suspend.c"
   1:../../tmk_core/common/avr/suspend.c **** #include <stdbool.h>
   2:../../tmk_core/common/avr/suspend.c **** #include <avr/sleep.h>
   3:../../tmk_core/common/avr/suspend.c **** #include <avr/wdt.h>
   4:../../tmk_core/common/avr/suspend.c **** #include <avr/interrupt.h>
   5:../../tmk_core/common/avr/suspend.c **** #include "matrix.h"
   6:../../tmk_core/common/avr/suspend.c **** #include "action.h"
   7:../../tmk_core/common/avr/suspend.c **** #include "backlight.h"
   8:../../tmk_core/common/avr/suspend.c **** #include "suspend_avr.h"
   9:../../tmk_core/common/avr/suspend.c **** #include "suspend.h"
  10:../../tmk_core/common/avr/suspend.c **** #include "timer.h"
  11:../../tmk_core/common/avr/suspend.c **** #ifdef PROTOCOL_LUFA
  12:../../tmk_core/common/avr/suspend.c **** #include "lufa.h"
  13:../../tmk_core/common/avr/suspend.c **** #endif
  14:../../tmk_core/common/avr/suspend.c **** 
  15:../../tmk_core/common/avr/suspend.c **** 
  16:../../tmk_core/common/avr/suspend.c **** #define wdt_intr_enable(value)   \
  17:../../tmk_core/common/avr/suspend.c **** __asm__ __volatile__ (  \
  18:../../tmk_core/common/avr/suspend.c ****     "in __tmp_reg__,__SREG__" "\n\t"    \
  19:../../tmk_core/common/avr/suspend.c ****     "cli" "\n\t"    \
  20:../../tmk_core/common/avr/suspend.c ****     "wdr" "\n\t"    \
  21:../../tmk_core/common/avr/suspend.c ****     "sts %0,%1" "\n\t"  \
  22:../../tmk_core/common/avr/suspend.c ****     "out __SREG__,__tmp_reg__" "\n\t"   \
  23:../../tmk_core/common/avr/suspend.c ****     "sts %0,%2" "\n\t" \
  24:../../tmk_core/common/avr/suspend.c ****     : /* no outputs */  \
  25:../../tmk_core/common/avr/suspend.c ****     : "M" (_SFR_MEM_ADDR(_WD_CONTROL_REG)), \
  26:../../tmk_core/common/avr/suspend.c ****     "r" (_BV(_WD_CHANGE_BIT) | _BV(WDE)), \
  27:../../tmk_core/common/avr/suspend.c ****     "r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) | \
  28:../../tmk_core/common/avr/suspend.c ****         _BV(WDIE) | (value & 0x07)) ) \
  29:../../tmk_core/common/avr/suspend.c ****     : "r0"  \
  30:../../tmk_core/common/avr/suspend.c **** )
  31:../../tmk_core/common/avr/suspend.c **** 
  32:../../tmk_core/common/avr/suspend.c **** 
  33:../../tmk_core/common/avr/suspend.c **** /* Power down MCU with watchdog timer
  34:../../tmk_core/common/avr/suspend.c ****  * wdto: watchdog timer timeout defined in <avr/wdt.h>
  35:../../tmk_core/common/avr/suspend.c ****  *          WDTO_15MS
  36:../../tmk_core/common/avr/suspend.c ****  *          WDTO_30MS
  37:../../tmk_core/common/avr/suspend.c ****  *          WDTO_60MS
  38:../../tmk_core/common/avr/suspend.c ****  *          WDTO_120MS
  39:../../tmk_core/common/avr/suspend.c ****  *          WDTO_250MS
  40:../../tmk_core/common/avr/suspend.c ****  *          WDTO_500MS
  41:../../tmk_core/common/avr/suspend.c ****  *          WDTO_1S
  42:../../tmk_core/common/avr/suspend.c ****  *          WDTO_2S
  43:../../tmk_core/common/avr/suspend.c ****  *          WDTO_4S
  44:../../tmk_core/common/avr/suspend.c ****  *          WDTO_8S
  45:../../tmk_core/common/avr/suspend.c ****  */
  46:../../tmk_core/common/avr/suspend.c **** static uint8_t wdt_timeout = 0;
  47:../../tmk_core/common/avr/suspend.c **** static void power_down(uint8_t wdto)
  48:../../tmk_core/common/avr/suspend.c **** {
  49:../../tmk_core/common/avr/suspend.c **** #ifdef PROTOCOL_LUFA
  50:../../tmk_core/common/avr/suspend.c ****     if (USB_DeviceState == DEVICE_STATE_Configured) return;
  51:../../tmk_core/common/avr/suspend.c **** #endif
  52:../../tmk_core/common/avr/suspend.c ****     wdt_timeout = wdto;
  53:../../tmk_core/common/avr/suspend.c **** 
  54:../../tmk_core/common/avr/suspend.c ****     // Watchdog Interrupt Mode
  55:../../tmk_core/common/avr/suspend.c ****     wdt_intr_enable(wdto);
  56:../../tmk_core/common/avr/suspend.c **** 
  57:../../tmk_core/common/avr/suspend.c ****     // TODO: more power saving
  58:../../tmk_core/common/avr/suspend.c ****     // See PicoPower application note
  59:../../tmk_core/common/avr/suspend.c ****     // - I/O port input with pullup
  60:../../tmk_core/common/avr/suspend.c ****     // - prescale clock
  61:../../tmk_core/common/avr/suspend.c ****     // - BOD disable
  62:../../tmk_core/common/avr/suspend.c ****     // - Power Reduction Register PRR
  63:../../tmk_core/common/avr/suspend.c ****     set_sleep_mode(SLEEP_MODE_PWR_DOWN);
  64:../../tmk_core/common/avr/suspend.c ****     sleep_enable();
  65:../../tmk_core/common/avr/suspend.c ****     sei();
  66:../../tmk_core/common/avr/suspend.c ****     sleep_cpu();
  67:../../tmk_core/common/avr/suspend.c ****     sleep_disable();
  68:../../tmk_core/common/avr/suspend.c **** 
  69:../../tmk_core/common/avr/suspend.c ****     // Disable watchdog after sleep
  70:../../tmk_core/common/avr/suspend.c ****     wdt_disable();
  71:../../tmk_core/common/avr/suspend.c **** }
  72:../../tmk_core/common/avr/suspend.c **** 
  73:../../tmk_core/common/avr/suspend.c **** static void standby(void)
  74:../../tmk_core/common/avr/suspend.c **** {
  75:../../tmk_core/common/avr/suspend.c ****     set_sleep_mode(SLEEP_MODE_STANDBY);
  76:../../tmk_core/common/avr/suspend.c ****     sleep_enable();
  77:../../tmk_core/common/avr/suspend.c ****     sei();
  78:../../tmk_core/common/avr/suspend.c ****     sleep_cpu();
  79:../../tmk_core/common/avr/suspend.c ****     sleep_disable();
  80:../../tmk_core/common/avr/suspend.c **** }
  81:../../tmk_core/common/avr/suspend.c **** 
  82:../../tmk_core/common/avr/suspend.c **** static void idle(void)
  83:../../tmk_core/common/avr/suspend.c **** {
  84:../../tmk_core/common/avr/suspend.c ****     set_sleep_mode(SLEEP_MODE_IDLE);
  85:../../tmk_core/common/avr/suspend.c ****     sleep_enable();
  86:../../tmk_core/common/avr/suspend.c ****     sei();
  87:../../tmk_core/common/avr/suspend.c ****     sleep_cpu();
  88:../../tmk_core/common/avr/suspend.c ****     sleep_disable();
  89:../../tmk_core/common/avr/suspend.c **** }
  90:../../tmk_core/common/avr/suspend.c **** 
  91:../../tmk_core/common/avr/suspend.c **** 
  92:../../tmk_core/common/avr/suspend.c **** void suspend_idle(uint8_t time)
  93:../../tmk_core/common/avr/suspend.c **** {
  17               		.loc 1 93 0
  18               		.cfi_startproc
  19               	.LVL0:
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  24               	.LBB4:
  25               	.LBB5:
  84:../../tmk_core/common/avr/suspend.c ****     set_sleep_mode(SLEEP_MODE_IDLE);
  26               		.loc 1 84 0
  27 0000 83B7      		in r24,0x33
  28               	.LVL1:
  29 0002 817F      		andi r24,lo8(-15)
  30 0004 83BF      		out 0x33,r24
  85:../../tmk_core/common/avr/suspend.c ****     sleep_enable();
  31               		.loc 1 85 0
  32 0006 83B7      		in r24,0x33
  33 0008 8160      		ori r24,lo8(1)
  34 000a 83BF      		out 0x33,r24
  86:../../tmk_core/common/avr/suspend.c ****     sei();
  35               		.loc 1 86 0
  36               	/* #APP */
  37               	 ;  86 "../../tmk_core/common/avr/suspend.c" 1
  38 000c 7894      		sei
  39               	 ;  0 "" 2
  87:../../tmk_core/common/avr/suspend.c ****     sleep_cpu();
  40               		.loc 1 87 0
  41               	 ;  87 "../../tmk_core/common/avr/suspend.c" 1
  42 000e 8895      		sleep
  43               		
  44               	 ;  0 "" 2
  88:../../tmk_core/common/avr/suspend.c ****     sleep_disable();
  45               		.loc 1 88 0
  46               	/* #NOAPP */
  47 0010 83B7      		in r24,0x33
  48 0012 8E7F      		andi r24,lo8(-2)
  49 0014 83BF      		out 0x33,r24
  50 0016 0895      		ret
  51               	.LBE5:
  52               	.LBE4:
  53               		.cfi_endproc
  54               	.LFE107:
  56               		.section	.text.suspend_power_down,"ax",@progbits
  57               	.global	suspend_power_down
  59               	suspend_power_down:
  60               	.LFB108:
  94:../../tmk_core/common/avr/suspend.c ****     idle();
  95:../../tmk_core/common/avr/suspend.c **** }
  96:../../tmk_core/common/avr/suspend.c **** 
  97:../../tmk_core/common/avr/suspend.c **** void suspend_power_down(void)
  98:../../tmk_core/common/avr/suspend.c **** {
  61               		.loc 1 98 0
  62               		.cfi_startproc
  63               	/* prologue: function */
  64               	/* frame size = 0 */
  65               	/* stack size = 0 */
  66               	.L__stack_usage = 0
  67               	.LVL2:
  68               	.LBB8:
  69               	.LBB9:
  50:../../tmk_core/common/avr/suspend.c ****     if (USB_DeviceState == DEVICE_STATE_Configured) return;
  70               		.loc 1 50 0
  71 0000 8091 0000 		lds r24,USB_DeviceState
  72 0004 8430      		cpi r24,lo8(4)
  73 0006 01F0      		breq .L2
  52:../../tmk_core/common/avr/suspend.c ****     wdt_timeout = wdto;
  74               		.loc 1 52 0
  75 0008 1092 0000 		sts wdt_timeout,__zero_reg__
  55:../../tmk_core/common/avr/suspend.c ****     wdt_intr_enable(wdto);
  76               		.loc 1 55 0
  77 000c 20E4      		ldi r18,lo8(64)
  78 000e 88E1      		ldi r24,lo8(24)
  79 0010 90E0      		ldi r25,0
  80               	/* #APP */
  81               	 ;  55 "../../tmk_core/common/avr/suspend.c" 1
  82 0012 0FB6      		in __tmp_reg__,__SREG__
  83 0014 F894      		cli
  84 0016 A895      		wdr
  85 0018 8093 6000 		sts 96,r24
  86 001c 0FBE      		out __SREG__,__tmp_reg__
  87 001e 2093 6000 		sts 96,r18
  88               		
  89               	 ;  0 "" 2
  63:../../tmk_core/common/avr/suspend.c ****     set_sleep_mode(SLEEP_MODE_PWR_DOWN);
  90               		.loc 1 63 0
  91               	/* #NOAPP */
  92 0022 83B7      		in r24,0x33
  93 0024 817F      		andi r24,lo8(-15)
  94 0026 8460      		ori r24,lo8(4)
  95 0028 83BF      		out 0x33,r24
  64:../../tmk_core/common/avr/suspend.c ****     sleep_enable();
  96               		.loc 1 64 0
  97 002a 83B7      		in r24,0x33
  98 002c 8160      		ori r24,lo8(1)
  99 002e 83BF      		out 0x33,r24
  65:../../tmk_core/common/avr/suspend.c ****     sei();
 100               		.loc 1 65 0
 101               	/* #APP */
 102               	 ;  65 "../../tmk_core/common/avr/suspend.c" 1
 103 0030 7894      		sei
 104               	 ;  0 "" 2
  66:../../tmk_core/common/avr/suspend.c ****     sleep_cpu();
 105               		.loc 1 66 0
 106               	 ;  66 "../../tmk_core/common/avr/suspend.c" 1
 107 0032 8895      		sleep
 108               		
 109               	 ;  0 "" 2
  67:../../tmk_core/common/avr/suspend.c ****     sleep_disable();
 110               		.loc 1 67 0
 111               	/* #NOAPP */
 112 0034 83B7      		in r24,0x33
 113 0036 8E7F      		andi r24,lo8(-2)
 114 0038 83BF      		out 0x33,r24
  70:../../tmk_core/common/avr/suspend.c ****     wdt_disable();
 115               		.loc 1 70 0
 116 003a 88E1      		ldi r24,lo8(24)
 117               	/* #APP */
 118               	 ;  70 "../../tmk_core/common/avr/suspend.c" 1
 119 003c 0FB6      		in __tmp_reg__, __SREG__
 120 003e F894      		cli
 121 0040 8093 6000 		sts 96, r24
 122 0044 1092 6000 		sts 96, __zero_reg__
 123 0048 0FBE      		out __SREG__,__tmp_reg__
 124               		
 125               	 ;  0 "" 2
 126               	/* #NOAPP */
 127               	.L2:
 128 004a 0895      		ret
 129               	.LBE9:
 130               	.LBE8:
 131               		.cfi_endproc
 132               	.LFE108:
 134               		.section	.text.suspend_wakeup_condition,"ax",@progbits
 135               	.global	suspend_wakeup_condition
 137               	suspend_wakeup_condition:
 138               	.LFB109:
  99:../../tmk_core/common/avr/suspend.c **** #ifdef NO_SUSPEND_POWER_DOWN
 100:../../tmk_core/common/avr/suspend.c ****     ;
 101:../../tmk_core/common/avr/suspend.c **** #elif defined(SUSPEND_MODE_NOPOWERSAVE)
 102:../../tmk_core/common/avr/suspend.c ****     ;
 103:../../tmk_core/common/avr/suspend.c **** #elif defined(SUSPEND_MODE_STANDBY)
 104:../../tmk_core/common/avr/suspend.c ****     standby();
 105:../../tmk_core/common/avr/suspend.c **** #elif defined(SUSPEND_MODE_IDLE)
 106:../../tmk_core/common/avr/suspend.c ****     idle();
 107:../../tmk_core/common/avr/suspend.c **** #else
 108:../../tmk_core/common/avr/suspend.c ****     power_down(WDTO_15MS);
 109:../../tmk_core/common/avr/suspend.c **** #endif
 110:../../tmk_core/common/avr/suspend.c **** }
 111:../../tmk_core/common/avr/suspend.c **** 
 112:../../tmk_core/common/avr/suspend.c **** bool suspend_wakeup_condition(void)
 113:../../tmk_core/common/avr/suspend.c **** {
 139               		.loc 1 113 0
 140               		.cfi_startproc
 141 0000 CF93      		push r28
 142               	.LCFI0:
 143               		.cfi_def_cfa_offset 3
 144               		.cfi_offset 28, -2
 145               	/* prologue: function */
 146               	/* frame size = 0 */
 147               	/* stack size = 1 */
 148               	.L__stack_usage = 1
 114:../../tmk_core/common/avr/suspend.c ****     matrix_power_up();
 149               		.loc 1 114 0
 150 0002 0E94 0000 		call matrix_power_up
 151               	.LVL3:
 115:../../tmk_core/common/avr/suspend.c ****     matrix_scan();
 152               		.loc 1 115 0
 153 0006 0E94 0000 		call matrix_scan
 154               	.LVL4:
 116:../../tmk_core/common/avr/suspend.c ****     matrix_power_down();
 155               		.loc 1 116 0
 156 000a 0E94 0000 		call matrix_power_down
 157               	.LVL5:
 158               	.LBB10:
 117:../../tmk_core/common/avr/suspend.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 159               		.loc 1 117 0
 160 000e C0E0      		ldi r28,0
 161               	.LVL6:
 162               	.L10:
 118:../../tmk_core/common/avr/suspend.c ****         if (matrix_get_row(r)) return true;
 163               		.loc 1 118 0
 164 0010 8C2F      		mov r24,r28
 165 0012 0E94 0000 		call matrix_get_row
 166               	.LVL7:
 167 0016 892B      		or r24,r25
 168 0018 01F4      		brne .L11
 117:../../tmk_core/common/avr/suspend.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 169               		.loc 1 117 0
 170 001a CF5F      		subi r28,lo8(-(1))
 171               	.LVL8:
 172 001c C630      		cpi r28,lo8(6)
 173 001e 01F4      		brne .L10
 174               	.LBE10:
 119:../../tmk_core/common/avr/suspend.c ****     }
 120:../../tmk_core/common/avr/suspend.c ****     return false;
 175               		.loc 1 120 0
 176 0020 80E0      		ldi r24,0
 177 0022 00C0      		rjmp .L9
 178               	.L11:
 179               	.LBB11:
 118:../../tmk_core/common/avr/suspend.c ****         if (matrix_get_row(r)) return true;
 180               		.loc 1 118 0
 181 0024 81E0      		ldi r24,lo8(1)
 182               	.L9:
 183               	/* epilogue start */
 184               	.LBE11:
 121:../../tmk_core/common/avr/suspend.c **** }
 185               		.loc 1 121 0
 186 0026 CF91      		pop r28
 187               	.LVL9:
 188 0028 0895      		ret
 189               		.cfi_endproc
 190               	.LFE109:
 192               		.section	.text.suspend_wakeup_init,"ax",@progbits
 193               	.global	suspend_wakeup_init
 195               	suspend_wakeup_init:
 196               	.LFB110:
 122:../../tmk_core/common/avr/suspend.c **** 
 123:../../tmk_core/common/avr/suspend.c **** // run immediately after wakeup
 124:../../tmk_core/common/avr/suspend.c **** void suspend_wakeup_init(void)
 125:../../tmk_core/common/avr/suspend.c **** {
 197               		.loc 1 125 0
 198               		.cfi_startproc
 199               	/* prologue: function */
 200               	/* frame size = 0 */
 201               	/* stack size = 0 */
 202               	.L__stack_usage = 0
 126:../../tmk_core/common/avr/suspend.c ****     // clear keyboard state
 127:../../tmk_core/common/avr/suspend.c ****     matrix_clear();
 203               		.loc 1 127 0
 204 0000 0E94 0000 		call matrix_clear
 205               	.LVL10:
 128:../../tmk_core/common/avr/suspend.c ****     clear_keyboard();
 206               		.loc 1 128 0
 207 0004 0C94 0000 		jmp clear_keyboard
 208               	.LVL11:
 209               		.cfi_endproc
 210               	.LFE110:
 212               		.section	.text.__vector_12,"ax",@progbits
 213               	.global	__vector_12
 215               	__vector_12:
 216               	.LFB111:
 129:../../tmk_core/common/avr/suspend.c **** #ifdef BACKLIGHT_ENABLE
 130:../../tmk_core/common/avr/suspend.c ****     backlight_init();
 131:../../tmk_core/common/avr/suspend.c **** #endif
 132:../../tmk_core/common/avr/suspend.c **** }
 133:../../tmk_core/common/avr/suspend.c **** 
 134:../../tmk_core/common/avr/suspend.c **** #ifndef NO_SUSPEND_POWER_DOWN
 135:../../tmk_core/common/avr/suspend.c **** /* watchdog timeout */
 136:../../tmk_core/common/avr/suspend.c **** ISR(WDT_vect)
 137:../../tmk_core/common/avr/suspend.c **** {
 217               		.loc 1 137 0
 218               		.cfi_startproc
 219 0000 1F92      		push r1
 220               	.LCFI1:
 221               		.cfi_def_cfa_offset 3
 222               		.cfi_offset 1, -2
 223 0002 0F92      		push r0
 224               	.LCFI2:
 225               		.cfi_def_cfa_offset 4
 226               		.cfi_offset 0, -3
 227 0004 0FB6      		in r0,__SREG__
 228 0006 0F92      		push r0
 229 0008 1124      		clr __zero_reg__
 230 000a 8F93      		push r24
 231               	.LCFI3:
 232               		.cfi_def_cfa_offset 5
 233               		.cfi_offset 24, -4
 234 000c 9F93      		push r25
 235               	.LCFI4:
 236               		.cfi_def_cfa_offset 6
 237               		.cfi_offset 25, -5
 238 000e AF93      		push r26
 239               	.LCFI5:
 240               		.cfi_def_cfa_offset 7
 241               		.cfi_offset 26, -6
 242 0010 BF93      		push r27
 243               	.LCFI6:
 244               		.cfi_def_cfa_offset 8
 245               		.cfi_offset 27, -7
 246               	/* prologue: Signal */
 247               	/* frame size = 0 */
 248               	/* stack size = 7 */
 249               	.L__stack_usage = 7
 138:../../tmk_core/common/avr/suspend.c ****     // compensate timer for sleep
 139:../../tmk_core/common/avr/suspend.c ****     switch (wdt_timeout) {
 250               		.loc 1 139 0
 251 0012 8091 0000 		lds r24,wdt_timeout
 252 0016 8111      		cpse r24,__zero_reg__
 253 0018 00C0      		rjmp .L14
 140:../../tmk_core/common/avr/suspend.c ****         case WDTO_15MS:
 141:../../tmk_core/common/avr/suspend.c ****             timer_count += 15 + 2;  // WDTO_15MS + 2(from observation)
 254               		.loc 1 141 0
 255 001a 8091 0000 		lds r24,timer_count
 256 001e 9091 0000 		lds r25,timer_count+1
 257 0022 A091 0000 		lds r26,timer_count+2
 258 0026 B091 0000 		lds r27,timer_count+3
 259 002a 4196      		adiw r24,17
 260 002c A11D      		adc r26,__zero_reg__
 261 002e B11D      		adc r27,__zero_reg__
 262 0030 8093 0000 		sts timer_count,r24
 263 0034 9093 0000 		sts timer_count+1,r25
 264 0038 A093 0000 		sts timer_count+2,r26
 265 003c B093 0000 		sts timer_count+3,r27
 266               	.L14:
 267               	/* epilogue start */
 142:../../tmk_core/common/avr/suspend.c ****             break;
 143:../../tmk_core/common/avr/suspend.c ****         default:
 144:../../tmk_core/common/avr/suspend.c ****             ;
 145:../../tmk_core/common/avr/suspend.c ****     }
 146:../../tmk_core/common/avr/suspend.c **** }
 268               		.loc 1 146 0
 269 0040 BF91      		pop r27
 270 0042 AF91      		pop r26
 271 0044 9F91      		pop r25
 272 0046 8F91      		pop r24
 273 0048 0F90      		pop r0
 274 004a 0FBE      		out __SREG__,r0
 275 004c 0F90      		pop r0
 276 004e 1F90      		pop r1
 277 0050 1895      		reti
 278               		.cfi_endproc
 279               	.LFE111:
 281               		.section	.bss.wdt_timeout,"aw",@nobits
 284               	wdt_timeout:
 285 0000 00        		.zero	1
 286               		.text
 287               	.Letext0:
 288               		.file 2 "/usr/lib/avr/include/stdint.h"
 289               		.file 3 "../../tmk_core/common/matrix.h"
 290               		.file 4 "../../tmk_core/common/timer.h"
 291               		.file 5 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 292               		.file 6 "../../tmk_core/common/action.h"
 293               		.file 7 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../Device.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 suspend.c
     /tmp/ccZsAvPL.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccZsAvPL.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccZsAvPL.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccZsAvPL.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccZsAvPL.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccZsAvPL.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccZsAvPL.s:14     .text.suspend_idle:0000000000000000 suspend_idle
     /tmp/ccZsAvPL.s:59     .text.suspend_power_down:0000000000000000 suspend_power_down
     /tmp/ccZsAvPL.s:284    .bss.wdt_timeout:0000000000000000 wdt_timeout
     /tmp/ccZsAvPL.s:137    .text.suspend_wakeup_condition:0000000000000000 suspend_wakeup_condition
     /tmp/ccZsAvPL.s:195    .text.suspend_wakeup_init:0000000000000000 suspend_wakeup_init
     /tmp/ccZsAvPL.s:215    .text.__vector_12:0000000000000000 __vector_12

UNDEFINED SYMBOLS
USB_DeviceState
matrix_power_up
matrix_scan
matrix_power_down
matrix_get_row
matrix_clear
clear_keyboard
timer_count
__do_clear_bss
